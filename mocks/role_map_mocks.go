// Automatically generated by MockGen. DO NOT EDIT!
// Source: ../discord/role_map.go

package mocks

import (
	discordgo "github.com/bwmarrin/discordgo"
	gomock "github.com/golang/mock/gomock"
)

// Mock of RoleMap interface
type MockRoleMap struct {
	ctrl     *gomock.Controller
	recorder *_MockRoleMapRecorder
}

// Recorder for MockRoleMap (not exported)
type _MockRoleMapRecorder struct {
	mock *MockRoleMap
}

func NewMockRoleMap(ctrl *gomock.Controller) *MockRoleMap {
	mock := &MockRoleMap{ctrl: ctrl}
	mock.recorder = &_MockRoleMapRecorder{mock}
	return mock
}

func (_m *MockRoleMap) EXPECT() *_MockRoleMapRecorder {
	return _m.recorder
}

func (_m *MockRoleMap) UpdateRoles() error {
	ret := _m.ctrl.Call(_m, "UpdateRoles")
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockRoleMapRecorder) UpdateRoles() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "UpdateRoles")
}

func (_m *MockRoleMap) GetRoles() map[string]*discordgo.Role {
	ret := _m.ctrl.Call(_m, "GetRoles")
	ret0, _ := ret[0].(map[string]*discordgo.Role)
	return ret0
}

func (_mr *_MockRoleMapRecorder) GetRoles() *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRoles")
}

func (_m *MockRoleMap) GetRoleId(roleName string) string {
	ret := _m.ctrl.Call(_m, "GetRoleId", roleName)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockRoleMapRecorder) GetRoleId(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRoleId", arg0)
}

func (_m *MockRoleMap) GetRoleName(roleId string) string {
	ret := _m.ctrl.Call(_m, "GetRoleName", roleId)
	ret0, _ := ret[0].(string)
	return ret0
}

func (_mr *_MockRoleMapRecorder) GetRoleName(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetRoleName", arg0)
}
